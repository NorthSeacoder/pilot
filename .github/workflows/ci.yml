name: Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Test & Build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20, 22]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile || pnpm install --no-frozen-lockfile

      - name: Debug environment
        run: |
          echo "=== Environment Debug ==="
          echo "Node version: $(node --version)"
          echo "pnpm version: $(pnpm --version)"
          echo "Current directory: $(pwd)"
          echo "Package.json packageManager: $(grep packageManager package.json || echo 'not found')"
          echo "Lockfile version: $(head -3 pnpm-lock.yaml | grep lockfileVersion || echo 'not found')"
          echo "=== CLI Test ==="
          # 测试 CLI 是否能正常执行
          node bin/pilot.js --version || echo "CLI version failed"
          # 创建测试项目并测试 stack override
          mkdir -p /tmp/debug-test && cd /tmp/debug-test
          echo '{"name": "debug-test", "version": "1.0.0"}' > package.json
          echo "Testing CLI with stack override..."
          /home/runner/work/pilot/pilot/bin/pilot.js add testing --dry-run --stack react 2>&1 || echo "CLI test failed with exit code $?"

      - name: Run all checks
        run: pnpm run ci

      - name: Check exports (Node.js 20 only)
        if: matrix.node-version == 20
        run: pnpm check-exports

      - name: Upload coverage to Codecov
        if: matrix.node-version == 20
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
